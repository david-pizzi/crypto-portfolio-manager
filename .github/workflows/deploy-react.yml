name: Build and Deploy React App to Azure

on:
  push:
    paths:
      - "CryptoPortfolioFrontend/**"
      - ".github/workflows/deploy-react.yml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install
      working-directory: ./CryptoPortfolioFrontend

    - name: Build React app
      run: npm run build
      working-directory: ./CryptoPortfolioFrontend
      env:
        NODE_ENV: production

    - name: Replace tokens
      uses: cschleiden/replace-tokens@v1.3
      with:
        files: './CryptoPortfolioFrontend/build/**/*.js'
      env:
        REACT_APP_AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
        REACT_APP_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
        REACT_APP_AUTH0_CLIENT_ID: ${{ secrets.REACT_APP_AUTH0_CLIENT_ID }}
        REACT_APP_AUTH0_SCOPE: ${{ secrets.REACT_APP_AUTH0_SCOPE }}
        REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
        REACT_APP_AZURE_FUNCTION_URL: ${{ secrets.REACT_APP_AZURE_FUNCTION_URL }}
        REACT_APP_AZURE_FUNCTION_CODE: ${{ secrets.REACT_APP_AZURE_FUNCTION_CODE }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: ./CryptoPortfolioFrontend/build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
        path: build

    - name: Upload to Azure
      uses: azure/cli@v1
      with:
        inlineScript: |
          az storage blob upload-batch -d '$web' -s build --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}

    - name: Set cache-control headers
      uses: azure/cli@v1
      with:
        inlineScript: |
          az storage blob update-batch --pattern "build/*" --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} --account-key ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }} --container-name '$web' --content-cache-control "no-cache, no-store, must-revalidate"
